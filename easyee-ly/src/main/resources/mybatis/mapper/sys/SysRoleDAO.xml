<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.easyproject.easyee.sm.sys.dao.SysRoleDAO">
	
	<resultMap type="SysRole" id="SysRoleMap">
		<result column="ROLE_ID" property="roleId"/>
	</resultMap>
	
	<insert id="save" useGeneratedKeys="true" keyColumn="ROLE_ID" keyProperty="roleId">
		INSERT INTO sys_role (
		  NAME,
		  STATUS,
		  REMARK
		) 
		VALUES
		  (
		    #{name},
		    #{status},
		    #{remark}
		  ) 
	</insert>
	<insert id="addRoleMenus">

		
		<choose>
			<!-- MYSQL -->
			<when test="@cn.easyproject.easyee.sm.base.controller.BaseController@dialect==3">
				insert into sys_role_menu(ROLE_ID, MENU_PERMISSION_ID) values
				<foreach collection="sysMenuPermissions" separator="," item="item">
				(${roleId}, ${item.menuPermissionId})
				</foreach>
			</when>
			<!-- ORACLE -->
			<when test="@cn.easyproject.easyee.sm.base.controller.BaseController@dialect==1 or @cn.easyproject.easyee.sm.base.controller.BaseController@dialect==10">
				insert into sys_role_menu(ROLE_ID, MENU_PERMISSION_ID)
				<foreach collection="sysMenuPermissions" separator="union all" item="item">
				select ${roleId}, ${item.menuPermissionId} from dual
				</foreach>
			</when>
		</choose>
		
	</insert>
	<insert id="addRoleOperations">
		<choose>
			<!-- MYSQL -->
			<when test="@cn.easyproject.easyee.sm.base.controller.BaseController@dialect==3">
				insert into sys_role_operation(ROLE_ID, OPERATION_PERMISSION_ID) values
				<foreach collection="sysOperationPermissions" separator="," item="item">
				(#{roleId}, #{item.operationPermissionId})
				</foreach>
			</when>
			<!-- ORACLE -->
			<when test="@cn.easyproject.easyee.sm.base.controller.BaseController@dialect==1 or @cn.easyproject.easyee.sm.base.controller.BaseController@dialect==10">
				insert into sys_role_operation(ROLE_ID, OPERATION_PERMISSION_ID) 
				<foreach collection="sysOperationPermissions" separator="union all" item="item">
				select ${roleId}, ${item.operationPermissionId} from dual
				</foreach>
			</when>
		</choose>
	</insert>
	
	
	<delete id="delete">
		delete from sys_role where role_id=#{roleId}	
	</delete>
	<delete id="deleteRoleUsers">
		delete from sys_user_role where role_id=#{roleId}	
	</delete>
	<delete id="deleteRoleMenus">
		delete from sys_role_menu where role_id=#{roleId}	
	</delete>
	<delete id="deleteRoleOperations">
		delete from sys_role_operation where role_id=#{roleId}	
	</delete>
	
	<update id="update">
		update 
		  sys_role 
		set
		  NAME = #{name},
		  STATUS = #{status},
		  REMARK = #{remark} 
		where ROLE_ID = #{roleId}
	</update>
	
	<select id="get" resultMap="SysRoleMap">
		select * from sys_role where ROLE_ID = #{roleId}
	</select>
	<select id="list" resultMap="SysRoleMap">
		select * from sys_role
	</select>
	<select id="pagination" resultMap="SysRoleMap">
		${autoSQL}
	</select>
	<select id="findMaxRow" resultType="int">
		select count(*) from sys_role
	</select>
	<select id="existsName" resultType="int">
		select count(*) from Sys_Role where lower(name)=#{name}
	</select>
	<select id="existsNameWhenEdit" resultType="int">
		select count(*) from Sys_Role where lower(name)=#{name} and role_Id!=#{roleId}
	</select>
	<select id="getAllPermissionsIds" resultType="hashmap">
		select 'menu' as TYPE,menu_Permission_Id as ID from sys_role_menu where ROLE_ID=#{roleId}
		union
		select 'operation' as TYPE,Operation_Permission_Id as ID from sys_role_operation where ROLE_ID=#{roleId}
	</select>
	
</mapper>