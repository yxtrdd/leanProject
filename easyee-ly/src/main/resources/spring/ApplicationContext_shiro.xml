<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Session 过期验证移除 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<!-- Default is 3,600,000 millis = 1 hour -->
		<property name="interval" value="3600000"></property>
	</bean>

	<!-- Session DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<!-- This name matches a cache name in ehcache.xml -->
		<!-- <property name="activeSessionsCacheName" value="shiro-activeSessionsCache"></property> -->
	</bean>
	
	<!-- Session Manager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- Session Timeout: 3,600,000 milliseconds = 1 hour-->
		<property name="globalSessionTimeout" value="3600000"></property> 
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"></property>
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<property name="sessionDAO" ref="sessionDAO"></property>
		<!-- 指定本系统SESSIONID,默认为:JSESSIONID问题:与SERVLET容器名冲突,如JETTY,TOMCAT等默认JSESSIONID,
	    	当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失 -->
	    <property name="sessionIdCookie">
		    <bean class="org.apache.shiro.web.servlet.SimpleCookie">
		        <constructor-arg name="name" value="kkxfd.session.id"/>
		    </bean>
        </property>
	</bean>
	
	<!-- Cache: EhCache-->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	<!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean> -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	
	<!-- RememberMeManager -->
	<bean id="cookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie name  -->
		<property name="name" value="rememberMe"></property>
		<!--  default is /request.getContextPath() -->
		<property name="path" value="/"></property> 
		<!-- default is ONE_YEAR -->
		<property name="maxAge" value="31536000"></property> 
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="cookie"></property>
	</bean>

	
	<!-- EasyJdbcRealm -->
	<bean id="jdbcRealm" class="cn.easyproject.easyshiro.EasyJdbcRealm">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 认证信息查询语句; default: select * from users where username = ? -->
		<!-- 用户状态：0启用; 1禁用; 2删除 -->
		<property name="authenticationQuery" value="select user_id as userid,name,password,status,real_name as realname from sys_user where name=? and status in(0,1)"></property>
		<!-- 密码列列名; default: password -->
		<property name="passwordColumn" value="password"></property>
		<!-- 角色查询语句(支持多个username=?); default: select role_name from user_roles where username = ?  -->
		<property name="userRolesQuery" value="select name from sys_role where role_id in (select role_id from sys_user_role where user_id=(select user_id from sys_user where name=?)) and status=0"></property>
		<!-- 是否执行permissionsQuery权限查询; default: true -->
		<property name="permissionsLookupEnabled" value="true"></property>
		<!-- 权限查询语句(支持多个username=?); default: select permission from user_roles_permissions where username = ?"  -->
		<property name="permissionsQuery" value="select action from sys_menu where MENU_PERMISSION_ID in( select MENU_PERMISSION_ID from sys_role_menu where ROLE_ID in(select role_id from sys_user_role where user_id=(select user_id from sys_user where name=?))) UNION select action from sys_operation where OPERATION_PERMISSION_ID in(select OPERATION_PERMISSION_ID from sys_role_operation where ROLE_ID in(select role_id from sys_user_role where user_id=(select user_id from sys_user where name=?)))"></property>
		<!-- EasyJdbcRealm 拦截器，可以认证和授权信息获得后，对SimpleAuthenticationInfo认证和SimpleAuthorizationInfo授权信息进行额外处理 -->
		<property name="interceptor" ref="realmInterceptor"></property>
	</bean>
	
	<!-- EasyShiro 自定义认证处理拦截器 -->
	<!-- EasyFormAuthenticationFilter 认证成功或失败拦截器 -->
	<bean id="authenticationInterceptor" class="cn.easyproject.easyee.sm.sys.shiro.AuthenticationInterceptor"> </bean>
	<!-- EasyJdbcRealm 认证与授权信息处理拦截器 -->
	<bean id="realmInterceptor" class="cn.easyproject.easyee.sm.sys.shiro.RealmInterceptor"> </bean>
	
	<!-- auth Login Authentication -->
	<bean id="auth" class="cn.easyproject.easyshiro.EasyFormAuthenticationFilter">
		<!-- ###### FormAuthenticationFilter Configuration ##### -->
		<!-- when request method is post execute login, else to login page view -->
		<property name="loginUrl" value="/toLogin"></property>
		<!-- redirect after successful login -->
		<property name="successUrl" value="/toMain"></property>
		<!-- name of request parameter with username; if not present filter assumes 'username' -->
		<property name="usernameParam" value="name"></property>
		<!-- name of request parameter with password; if not present filter assumes 'password' -->
		<property name="passwordParam" value="password"></property>
		<!-- does the user wish to be remembered?; if not present filter assumes 'rememberMe' -->
		<!-- <property name="rememberMeParam" value="rememberMe"></property> -->
		
		
		<!-- ###### EasyFormAuthenticationFilter Configuration ##### -->
		<!-- ## Login Configuration ## -->
		<!--  登录成功，将 token 存入 session 的 key; default is 'TOKEN' -->
		<property name="sessionTokenKey" value="TOKEN"></property>
		<!-- 是否使用登录失败以重定向方式跳转回登录页面; default is 'false' -->
		<property name="loginFailureRedirectToLogin" value="true"></property>
		
		
		<!-- ## User defined UsernamePasswordToken Configuration ## -->
		<!-- 自定义 UsernamePasswordToken; Default is 'org.apache.shiro.auth.UsernamePasswordToken' -->
		<property name="tokenClassName" value="cn.easyproject.easyee.sm.sys.shiro.UsernamePasswordEncodeToken"></property>
		
		
		<!-- ## CAPTCHA Configuration ## -->
		<!-- 是否开启验证码验证; default 'true' -->
		<property name="enableCaptcha" value="false"></property>
		<!-- 验证码参数名; default 'captcha' -->
		<property name="captchaParam" value="captcha"></property>
		<!-- Session中存储验证码值的key; default 'captcha' -->
		<property name="sessionCaptchaKey" value="rand"></property>
		
		
		<!-- ## AutoLogin Configuration ## -->
		<!-- 是否开启自动登录 -->
		<property name="enableAutoLogin" value="false"></property>
		<!-- 自动登录参数数名 -->
		<property name="autoLoginParam" value="autoLogin"></property>
		<!-- Cookie maxAge ，default is ONE_YEAR -->
		<property name="autoLoginMaxAge" value="31536000"></property>
		<!-- Cookie path，default is "" -->
		<property name="autoLoginPath" value="/"></property>
		<!-- Cookie domain，empty or default is your current domain name -->
		<property name="autoLoginDomain" value=""></property>
		
		
	   <!-- ## LockLogin EhCache Configuration ## -->
       <!-- LockLogin 管理锁定时间周期的 EHCache 缓存名称，只需调整timeToIdleSeconds -->
       <!-- 达到登录锁定次数，登录锁定  2 Hours -->
      <!--  	
      <cache name="shiro-lockLoginCache"
       maxElementsInMemory="100000"
       overflowToDisk="true"
       eternal="false"
       timeToLiveSeconds="0"
       timeToIdleSeconds="7200"
       diskPersistent="false"
       diskExpiryThreadIntervalSeconds="600"/> 
      -->
       <!-- LockLogin 统计登录错误次数时间周期的 EHCache 缓存名称，只需调整 timeToIdleSeconds -->
       <!-- 统计 10 分钟内的错误次数  -->
       <!-- <cache name="shiro-lockCheckCache"
       maxElementsInMemory="100000"
       overflowToDisk="true"
       eternal="false"
       timeToLiveSeconds="0"
       timeToIdleSeconds="600"
       diskPersistent="false"
       diskExpiryThreadIntervalSeconds="600"/> -->
       
		<!-- 是否开启LockLogin用户登录锁定；默认为false，不开启 -->
		<property name="enableLockLogin" value="false"></property>
		<!-- Shiro CacheManager -->
		<property name="ehCacheManager" ref="shiroCacheManager"></property>
		<!-- LockLogin 管理锁定时间周期的 EHCache 缓存名称；默认为 shiro-lockLoginCache -->
		<property name="lockLoginCacheName" value="shiro-lockLoginCache"></property>
		<!-- LockLogin 统计登录错误次数时间周期的 EHCache 缓存名称；默认为 shiro-lockCheckCache -->
		<property name="lockCheckCacheName" value="shiro-lockCheckCache"></property>
		<!-- 同一用户名登录达到登录错误次数，登录锁定；0为不限制；默认为6 -->
		<property name="userLock" value="4"></property>
		<!--  同一IP登录达到错误次数，登录锁定；0为不限制；默认为15 -->
		<property name="ipLock" value="6"></property>
		<!-- 达到指定登录错误次数，显示验证码；-1为不控制验证码显示；默认为1 -->
		<property name="showCaptcha" value="4"></property>

		<!-- ## 登录失败相关错误消息 ## -->
		<!-- 登录失败，消息 key  -->
		<property name="msgKey" value="MSG"></property>
		<!-- 将消息存入session，session.setAttribute(MsgKey,xxxErrorMsg); default is 'false' -->
		<property name="sessionMsg" value="true"></property>
		<!-- 将消息存入request，request.setAttribute(MsgKey,xxxErrorMsg); default is 'false' -->
		<property name="requestMsg" value="true"></property>
		<!-- # 登录错误的，异常提示内容 Map-->
		<property name="exceptionMsg">
			<map>
				<!-- ExceptionClassName:"Message", ExceptionClassName2:"Message2", ... -->
				<entry key="LockedAccountException" value="账户锁定，请联系管理员解锁。"></entry>
				<entry key="AuthenticationException" value="用户名或密码有误！"></entry>
				<entry key="EasyIncorrectCaptchaException" value="验证码有误！"></entry>
				<entry key="EasyLockUserException" value="由于该用户连续登录错误，暂时被锁定 2 小时，请稍后再试。"></entry>
				<entry key="EasyLockIPException" value="由于该IP连续登录错误，暂时被锁定 2 小时，请稍后再试。"></entry>
			</map>
		</property>
		
		<!-- 自定义拦截器，实现 EasyAuthenticationInterceptor 接口 -->
		<property name="interceptor" ref="authenticationInterceptor"></property>
	</bean>
	
	<!-- specify LogoutFilter -->
	<!-- 能够实现会话安全信息(Subjec/Session)，RememberMe信息和AutoLogin自动登录信息的注销 -->
	<bean id="logout" class="cn.easyproject.easyshiro.EasyLogoutFilter">
		<!-- specify logout redirectUrl -->
		<property name="redirectUrl" value="/toLogin"></property>
		<!-- EasyFormAuthenticationFilter -->
		<property name="easyFormAuthenticationFilter" ref="auth"></property>
	</bean>
	
	<!-- perms -->
	<bean id="perms" class="cn.easyproject.easyshiro.EasyURLPermissionFilter">
		<!-- 权限验证失败，转向的url -->
		<property name="unauthorizedUrl" value="/toLogin"></property>
		<!-- 是否开启登录超时检测; default is 'true'-->
		<property name="authenticationTimeoutCheck" value="true"></property>
		<!-- 权限验证失败，消息 key; default is 'MSG'  -->
		<property name="msgKey" value="msg"></property>
		<!-- 权限验证失败，状态码 key：301，登录超时; 401，权限拒绝; default is 'statusCode'  -->
		<property name="statusCode" value="statusCode"></property>
		<!-- 将消息存入session，session.setAttribute(MsgKey,xxxErrorMsg); default is 'false' -->
		<property name="sessionMsg" value="true"></property>
		<!-- 将消息存入request，request.setAttribute(MsgKey,xxxErrorMsg); default is 'false' -->
		<property name="requestMsg" value="true"></property>
		<!-- 认证失败提示内容;  default is 'Permission denied!' -->
		<property name="permissionDeniedMsg" value="您没有权限"></property>
		<!-- 登录超时提示内容; default is 'Your login has expired, please login again!' -->
		<property name="authenticationTimeoutMsg" value="您的登录已过期，请重新登录！"></property>
	</bean>
	
	<!-- Shiro Native SessionManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionMode" value="native"></property> -->
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- Cache: EhCache-->
		<property name="cacheManager" ref="shiroCacheManager"></property>
		<property name="rememberMeManager" ref="rememberMeManager"></property>
		<property name="realms">
			<list>
				<ref bean="jdbcRealm"/>
			</list>
		</property>
	</bean>
	
	<!-- shiroFilter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <!-- override these for application-specific URLs if you like:-->
	    <property name="loginUrl" value="/toLogin"/>
	    <property name="successUrl" value="/toMain"/>
	    <property name="unauthorizedUrl" value="/toLogin"/> 
	    <property name="filterChainDefinitions">
	        <value>
	            # anonymous
				/checkCaptcha = anon
				/notFound = anon
				/script/login.js = anon
				/favicon.ico = anon
				/staticresources/** = anon
				/file/** = anon
				/jsp/** = anon
				/common/**	= anon
				/services/**  = anon
				
	            # requests to /DoLogout will be handled by the ‘logout’ filter
				/logout = logout
				
				# requests to /toLogin will be handled by the ‘auth’ filter
				/toLogin = auth
				
				# doc page need auth
				/script/** = auth
				/doc/** = auth
				
				# page forward
				/toForward/** = authcBasic
				
				# need to permission
				/toMain = auth
				/** =  perms
				
	        </value>
	    </property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
</beans>