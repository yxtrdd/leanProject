package cn.easyproject.easyee.sm.sys.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import cn.easyproject.easyee.sm.base.controller.BaseController;
import cn.easyproject.easyee.sm.base.service.BaseService;
import cn.easyproject.easyee.sm.sys.criteria.SysDictCriteria;
import cn.easyproject.easyee.sm.sys.entity.SysDict;
import cn.easyproject.easyee.sm.sys.service.SysDictService;

 /**
 * SysDict Controller, generated by EasyAuto
 *
 * 所有Controller处理类统一继承BaseController.
 * 
 * BaseController中定义了一下内容：
 * - request, application Servlet API 
 * - 请求响应相关的JSON参数（EasyUI框架请求都是通过JSON响应） 
 * - 初始化JSON响应数据的方法（setJsonMap，setJsonMsgMap，setJsonPaginationMap(PageBean, Object...)） 
 * - 获得分页对象：super.getPageBean() 
 * 
 * @author easyproject.cn
 * @version 1.0
 */
@RestController
@RequestMapping("SysDict")
public class SysDictController extends BaseController<SysDict, SysDictCriteria> {

	public static Logger logger = LoggerFactory.getLogger(SysDictController.class);
	
	@Resource
	private SysDictService sysDictService;
	
    @Override
    public BaseService<SysDict> getService() {
        return sysDictService;
    }
    
    /**
	 * Forward to page
	 */
	@RequestMapping("page")
	public ModelAndView page(ModelAndView mv) {
		mv.setViewName("main/sys/SysDict");
		return mv;
	}
	
	/**
     * unique:验证关键字唯一性.
     * @author gaojx  
     * @param SysDict 字典分类 + key
     * @return
     */
    @RequestMapping("unique")
    public String unique(SysDict o) {
        SysDict sysDict = null;
        try {
            sysDict = sysDictService.unique(o);
            if (null != sysDict) {
                return "false";
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "true";
    }
	
    /**
     * combo:字典下拉
     * @author gaojx  
     * @param SysDict 字典分类 + key
     * @return
     */
    @RequestMapping("combo")
    public String combo(String catalog) {
        List<Map<String, Object>> list = new ArrayList<>();
        List<SysDict> sysDictList = sysDictService.queryByCname(catalog);
        for (SysDict sysDict : sysDictList) {
            Map<String, Object> record = new HashMap<>();
            record.put("text", sysDict.getKey());
            record.put("value", sysDict.getValue());
            list.add(record);
        }
        return toJson(list);
    }

}
